{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPB2dbc76//5WeD3qarEFwR"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"5kLgXupg6wOO","executionInfo":{"status":"ok","timestamp":1671848520127,"user_tz":-180,"elapsed":2090,"user":{"displayName":"Payrav Kahorov","userId":"15127841572095814136"}}},"outputs":[],"source":["%matplotlib inline\n","import matplotlib.pyplot as plt\n","import seaborn as sns; sns.set()\n","import numpy as np\n","import pandas as pd\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn import metrics"]},{"cell_type":"code","source":["data = pd.read_csv(r'/content/credit_data.csv',delimiter=',')\n","print(data.isna().sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FpGXWt187_QN","executionInfo":{"status":"ok","timestamp":1671848544430,"user_tz":-180,"elapsed":377,"user":{"displayName":"Payrav Kahorov","userId":"15127841572095814136"}},"outputId":"3c9c6997-8ccf-4bde-ccc4-b5e9646a57f4"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Unnamed: 0            0\n","Age                   0\n","Sex                   0\n","Job                   0\n","Housing               0\n","Saving accounts     183\n","Checking account    394\n","Credit amount         0\n","Duration              0\n","Purpose               0\n","Risk                  0\n","dtype: int64\n"]}]},{"cell_type":"code","source":["target = data['Risk']\n","data = data.drop(['Risk','Unnamed: 0', 'Purpose'], axis=1)"],"metadata":{"id":"gEJ0Sgea8JDL","executionInfo":{"status":"ok","timestamp":1671848564782,"user_tz":-180,"elapsed":409,"user":{"displayName":"Payrav Kahorov","userId":"15127841572095814136"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"bDrAsnH98La1","executionInfo":{"status":"ok","timestamp":1671848577180,"user_tz":-180,"elapsed":262,"user":{"displayName":"Payrav Kahorov","userId":"15127841572095814136"}},"outputId":"d31995d9-4a0c-4b0c-df48-3d3ac5eb43da"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Age     Sex  Job Housing Saving accounts Checking account  Credit amount  \\\n","0     67    male    2     own             NaN           little           1169   \n","1     22  female    2     own          little         moderate           5951   \n","2     49    male    1     own          little              NaN           2096   \n","3     45    male    2    free          little           little           7882   \n","4     53    male    2    free          little           little           4870   \n","..   ...     ...  ...     ...             ...              ...            ...   \n","995   31  female    1     own          little              NaN           1736   \n","996   40    male    3     own          little           little           3857   \n","997   38    male    2     own          little              NaN            804   \n","998   23    male    2    free          little           little           1845   \n","999   27    male    2     own        moderate         moderate           4576   \n","\n","     Duration  \n","0           6  \n","1          48  \n","2          12  \n","3          42  \n","4          24  \n","..        ...  \n","995        12  \n","996        30  \n","997        12  \n","998        45  \n","999        45  \n","\n","[1000 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-6b3d2a4e-08e9-4634-9f21-993cdae11b36\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>Job</th>\n","      <th>Housing</th>\n","      <th>Saving accounts</th>\n","      <th>Checking account</th>\n","      <th>Credit amount</th>\n","      <th>Duration</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>67</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>NaN</td>\n","      <td>little</td>\n","      <td>1169</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>22</td>\n","      <td>female</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>little</td>\n","      <td>moderate</td>\n","      <td>5951</td>\n","      <td>48</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>49</td>\n","      <td>male</td>\n","      <td>1</td>\n","      <td>own</td>\n","      <td>little</td>\n","      <td>NaN</td>\n","      <td>2096</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>45</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>free</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>7882</td>\n","      <td>42</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>53</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>free</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>4870</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>995</th>\n","      <td>31</td>\n","      <td>female</td>\n","      <td>1</td>\n","      <td>own</td>\n","      <td>little</td>\n","      <td>NaN</td>\n","      <td>1736</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>996</th>\n","      <td>40</td>\n","      <td>male</td>\n","      <td>3</td>\n","      <td>own</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>3857</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>997</th>\n","      <td>38</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>little</td>\n","      <td>NaN</td>\n","      <td>804</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>998</th>\n","      <td>23</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>free</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>1845</td>\n","      <td>45</td>\n","    </tr>\n","    <tr>\n","      <th>999</th>\n","      <td>27</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>moderate</td>\n","      <td>moderate</td>\n","      <td>4576</td>\n","      <td>45</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1000 rows Ã— 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6b3d2a4e-08e9-4634-9f21-993cdae11b36')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6b3d2a4e-08e9-4634-9f21-993cdae11b36 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6b3d2a4e-08e9-4634-9f21-993cdae11b36');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["data['Saving accounts'] = data['Saving accounts'].map({\"little\":1,\"moderate\":2,\"quite rich\":3 ,\"rich\":4 });\n","data['Checking account'] = data['Checking account'].map({\"little\":1,\"moderate\":2,\"rich\":3 });\n","target = target.map({\"good\":1,\"bad\":0});\n","data['Saving accounts'] = data['Saving accounts'].fillna(0)\n","data['Checking account'] = data['Checking account'].fillna(0)"],"metadata":{"id":"7x2wyH8y8UaC","executionInfo":{"status":"ok","timestamp":1671848611738,"user_tz":-180,"elapsed":287,"user":{"displayName":"Payrav Kahorov","userId":"15127841572095814136"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"08vBSx6f8VvD","executionInfo":{"status":"ok","timestamp":1671848617316,"user_tz":-180,"elapsed":267,"user":{"displayName":"Payrav Kahorov","userId":"15127841572095814136"}},"outputId":"d05aad2c-e5e7-4914-f623-4e9076a5a884"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Age     Sex  Job Housing  Saving accounts  Checking account  \\\n","0     67    male    2     own              0.0               1.0   \n","1     22  female    2     own              1.0               2.0   \n","2     49    male    1     own              1.0               0.0   \n","3     45    male    2    free              1.0               1.0   \n","4     53    male    2    free              1.0               1.0   \n","..   ...     ...  ...     ...              ...               ...   \n","995   31  female    1     own              1.0               0.0   \n","996   40    male    3     own              1.0               1.0   \n","997   38    male    2     own              1.0               0.0   \n","998   23    male    2    free              1.0               1.0   \n","999   27    male    2     own              2.0               2.0   \n","\n","     Credit amount  Duration  \n","0             1169         6  \n","1             5951        48  \n","2             2096        12  \n","3             7882        42  \n","4             4870        24  \n","..             ...       ...  \n","995           1736        12  \n","996           3857        30  \n","997            804        12  \n","998           1845        45  \n","999           4576        45  \n","\n","[1000 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-b0e124c9-b51c-4da4-870f-9573bf3e4203\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>Job</th>\n","      <th>Housing</th>\n","      <th>Saving accounts</th>\n","      <th>Checking account</th>\n","      <th>Credit amount</th>\n","      <th>Duration</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>67</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1169</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>22</td>\n","      <td>female</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>5951</td>\n","      <td>48</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>49</td>\n","      <td>male</td>\n","      <td>1</td>\n","      <td>own</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>2096</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>45</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>free</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>7882</td>\n","      <td>42</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>53</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>free</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>4870</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>995</th>\n","      <td>31</td>\n","      <td>female</td>\n","      <td>1</td>\n","      <td>own</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1736</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>996</th>\n","      <td>40</td>\n","      <td>male</td>\n","      <td>3</td>\n","      <td>own</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>3857</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>997</th>\n","      <td>38</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>804</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>998</th>\n","      <td>23</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>free</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1845</td>\n","      <td>45</td>\n","    </tr>\n","    <tr>\n","      <th>999</th>\n","      <td>27</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>4576</td>\n","      <td>45</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1000 rows Ã— 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b0e124c9-b51c-4da4-870f-9573bf3e4203')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b0e124c9-b51c-4da4-870f-9573bf3e4203 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b0e124c9-b51c-4da4-870f-9573bf3e4203');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["new_data = pd.get_dummies(data)\n","new_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Spab3u7w8YpB","executionInfo":{"status":"ok","timestamp":1671848628570,"user_tz":-180,"elapsed":400,"user":{"displayName":"Payrav Kahorov","userId":"15127841572095814136"}},"outputId":"9a0cc156-b971-4e88-f07b-a8042c969f7d"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Age  Job  Saving accounts  Checking account  Credit amount  Duration  \\\n","0   67    2              0.0               1.0           1169         6   \n","1   22    2              1.0               2.0           5951        48   \n","2   49    1              1.0               0.0           2096        12   \n","3   45    2              1.0               1.0           7882        42   \n","4   53    2              1.0               1.0           4870        24   \n","\n","   Sex_female  Sex_male  Housing_free  Housing_own  Housing_rent  \n","0           0         1             0            1             0  \n","1           1         0             0            1             0  \n","2           0         1             0            1             0  \n","3           0         1             1            0             0  \n","4           0         1             1            0             0  "],"text/html":["\n","  <div id=\"df-f875024e-27d1-4185-919f-37b167849fa7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Job</th>\n","      <th>Saving accounts</th>\n","      <th>Checking account</th>\n","      <th>Credit amount</th>\n","      <th>Duration</th>\n","      <th>Sex_female</th>\n","      <th>Sex_male</th>\n","      <th>Housing_free</th>\n","      <th>Housing_own</th>\n","      <th>Housing_rent</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>67</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1169</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>22</td>\n","      <td>2</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>5951</td>\n","      <td>48</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>49</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>2096</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>45</td>\n","      <td>2</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>7882</td>\n","      <td>42</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>53</td>\n","      <td>2</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>4870</td>\n","      <td>24</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f875024e-27d1-4185-919f-37b167849fa7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f875024e-27d1-4185-919f-37b167849fa7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f875024e-27d1-4185-919f-37b167849fa7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["from sklearn.cluster import KMeans;\n","from sklearn.decomposition import PCA;\n","from sklearn.preprocessing import normalize;\n","y = KMeans().fit_predict(new_data)\n","X = normalize(new_data);\n","x_PCA = PCA(n_components=2).fit_transform(X,2);\n","print(x_PCA.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-Zg36s638ld8","executionInfo":{"status":"ok","timestamp":1671848681450,"user_tz":-180,"elapsed":652,"user":{"displayName":"Payrav Kahorov","userId":"15127841572095814136"}},"outputId":"dcdb136a-be32-47dd-818f-604bbcef9b8e"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["(1000, 2)\n"]}]},{"cell_type":"code","source":["plt.scatter(x_PCA[:,0], x_PCA[:,1], c=target, cmap='Spectral')\n","plt.figure()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":303},"id":"RF0TOSG78nyW","executionInfo":{"status":"ok","timestamp":1671848691411,"user_tz":-180,"elapsed":663,"user":{"displayName":"Payrav Kahorov","userId":"15127841572095814136"}},"outputId":"9cce08b3-3c74-444d-9fd5-c7da392965a1"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Figure size 432x288 with 0 Axes>"]},"metadata":{},"execution_count":9},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 0 Axes>"]},"metadata":{}}]}]}