{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"vF73hvXfe0G-"},"outputs":[],"source":["import pandas as pd\n","col_names = ['pregnant', 'glucose', 'bp', 'skin', \n","             'insulin', 'bmi', 'pedigree', 'age', 'label']\n","pima = pd.read_csv('diabetes.csv', header=None, names=col_names)\n","pima = pima[1:]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":29,"status":"ok","timestamp":1666652406809,"user":{"displayName":"Payrav Kahorov","userId":"15127841572095814136"},"user_tz":-180},"id":"GpTPyi7Lfr1b","outputId":"6db04b10-347c-4a56-d4c6-b20b55283174"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["  pregnant glucose  bp skin insulin   bmi pedigree age label\n","1        6     148  72   35       0  33.6    0.627  50     1\n","2        1      85  66   29       0  26.6    0.351  31     0\n","3        8     183  64    0       0  23.3    0.672  32     1\n","4        1      89  66   23      94  28.1    0.167  21     0\n","5        0     137  40   35     168  43.1    2.288  33     1"],"text/html":["\n","  <div id=\"df-7aab77bb-fa54-471d-9886-3e3a8ee1f732\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pregnant</th>\n","      <th>glucose</th>\n","      <th>bp</th>\n","      <th>skin</th>\n","      <th>insulin</th>\n","      <th>bmi</th>\n","      <th>pedigree</th>\n","      <th>age</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>6</td>\n","      <td>148</td>\n","      <td>72</td>\n","      <td>35</td>\n","      <td>0</td>\n","      <td>33.6</td>\n","      <td>0.627</td>\n","      <td>50</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>85</td>\n","      <td>66</td>\n","      <td>29</td>\n","      <td>0</td>\n","      <td>26.6</td>\n","      <td>0.351</td>\n","      <td>31</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>8</td>\n","      <td>183</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>23.3</td>\n","      <td>0.672</td>\n","      <td>32</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>89</td>\n","      <td>66</td>\n","      <td>23</td>\n","      <td>94</td>\n","      <td>28.1</td>\n","      <td>0.167</td>\n","      <td>21</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0</td>\n","      <td>137</td>\n","      <td>40</td>\n","      <td>35</td>\n","      <td>168</td>\n","      <td>43.1</td>\n","      <td>2.288</td>\n","      <td>33</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7aab77bb-fa54-471d-9886-3e3a8ee1f732')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7aab77bb-fa54-471d-9886-3e3a8ee1f732 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7aab77bb-fa54-471d-9886-3e3a8ee1f732');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}],"source":["pima.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xfvS0-rsfywI"},"outputs":[],"source":["Y = pima.label\n","X = pima.drop(['label'], axis=1)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8kTR-ZqZf-en"},"outputs":[],"source":["from sklearn.model_selection import train_test_split\n","x_train, x_test, y_train, y_test = train_test_split(X, Y, \n","                                                    test_size=0.2,\n","                                                    random_state=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"elapsed":263,"status":"ok","timestamp":1666652498269,"user":{"displayName":"Payrav Kahorov","userId":"15127841572095814136"},"user_tz":-180},"id":"3sO10DGNgEdE","outputId":"efd90d2e-f9e5-433c-a137-d75ad1cffd85"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["    pregnant glucose  bp skin insulin   bmi pedigree age\n","664        9     145  80   46     130  37.9    0.637  40\n","713       10     129  62   36       0  41.2    0.441  38\n","162        7     102  74   40     105  37.2    0.204  45\n","510        8     120  78    0       0    25    0.409  64\n","306        2     120  76   37     105  39.7    0.215  29\n","..       ...     ...  ..  ...     ...   ...      ...  ..\n","646        2     157  74   35     440  39.4    0.134  30\n","716        7     187  50   33     392  33.9    0.826  34\n","73        13     126  90    0       0  43.4    0.583  42\n","236        4     171  72    0       0  43.6    0.479  26\n","38         9     102  76   37       0  32.9    0.665  46\n","\n","[614 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-427dbcfa-bfdb-4eb7-8434-b9e8c1c3d8c0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pregnant</th>\n","      <th>glucose</th>\n","      <th>bp</th>\n","      <th>skin</th>\n","      <th>insulin</th>\n","      <th>bmi</th>\n","      <th>pedigree</th>\n","      <th>age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>664</th>\n","      <td>9</td>\n","      <td>145</td>\n","      <td>80</td>\n","      <td>46</td>\n","      <td>130</td>\n","      <td>37.9</td>\n","      <td>0.637</td>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>713</th>\n","      <td>10</td>\n","      <td>129</td>\n","      <td>62</td>\n","      <td>36</td>\n","      <td>0</td>\n","      <td>41.2</td>\n","      <td>0.441</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>162</th>\n","      <td>7</td>\n","      <td>102</td>\n","      <td>74</td>\n","      <td>40</td>\n","      <td>105</td>\n","      <td>37.2</td>\n","      <td>0.204</td>\n","      <td>45</td>\n","    </tr>\n","    <tr>\n","      <th>510</th>\n","      <td>8</td>\n","      <td>120</td>\n","      <td>78</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>25</td>\n","      <td>0.409</td>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>306</th>\n","      <td>2</td>\n","      <td>120</td>\n","      <td>76</td>\n","      <td>37</td>\n","      <td>105</td>\n","      <td>39.7</td>\n","      <td>0.215</td>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>646</th>\n","      <td>2</td>\n","      <td>157</td>\n","      <td>74</td>\n","      <td>35</td>\n","      <td>440</td>\n","      <td>39.4</td>\n","      <td>0.134</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>716</th>\n","      <td>7</td>\n","      <td>187</td>\n","      <td>50</td>\n","      <td>33</td>\n","      <td>392</td>\n","      <td>33.9</td>\n","      <td>0.826</td>\n","      <td>34</td>\n","    </tr>\n","    <tr>\n","      <th>73</th>\n","      <td>13</td>\n","      <td>126</td>\n","      <td>90</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>43.4</td>\n","      <td>0.583</td>\n","      <td>42</td>\n","    </tr>\n","    <tr>\n","      <th>236</th>\n","      <td>4</td>\n","      <td>171</td>\n","      <td>72</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>43.6</td>\n","      <td>0.479</td>\n","      <td>26</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>9</td>\n","      <td>102</td>\n","      <td>76</td>\n","      <td>37</td>\n","      <td>0</td>\n","      <td>32.9</td>\n","      <td>0.665</td>\n","      <td>46</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>614 rows × 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-427dbcfa-bfdb-4eb7-8434-b9e8c1c3d8c0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-427dbcfa-bfdb-4eb7-8434-b9e8c1c3d8c0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-427dbcfa-bfdb-4eb7-8434-b9e8c1c3d8c0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}],"source":["x_train"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"e-d2J1IvgI-t"},"outputs":[],"source":["from sklearn.linear_model import LogisticRegression\n","cls = LogisticRegression()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":249,"status":"ok","timestamp":1666652529255,"user":{"displayName":"Payrav Kahorov","userId":"15127841572095814136"},"user_tz":-180},"id":"9W3D9bEIgwjX","outputId":"4ca88a9e-d2db-43c1-d959-5a17332cef9a"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_logistic.py:818: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG,\n"]},{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"]},"metadata":{},"execution_count":14}],"source":["cls.fit(x_train,y_train)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7N4jG0fkg5Kr"},"outputs":[],"source":["y_pred = cls.predict(x_test)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":238,"status":"ok","timestamp":1666652556820,"user":{"displayName":"Payrav Kahorov","userId":"15127841572095814136"},"user_tz":-180},"id":"IydnERXvg_UH","outputId":"18df07c8-44d6-4f0e-bdca-43a86621bc0a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[89, 10],\n","       [24, 31]])"]},"metadata":{},"execution_count":17}],"source":["from sklearn import metrics\n","metrics.confusion_matrix(y_test, y_pred)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"A9PPSdMsmxqf"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":296},"executionInfo":{"elapsed":600,"status":"ok","timestamp":1666652560160,"user":{"displayName":"Payrav Kahorov","userId":"15127841572095814136"},"user_tz":-180},"id":"XwKOiEIwhWiK","outputId":"945f856d-a44f-49d2-e797-8f3c42730948"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 15.0, 'Предсказанные значения')"]},"metadata":{},"execution_count":18},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["import  numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","%matplotlib inline\n","class_names = [0, 1]\n","fig, ax = plt.subplots()\n","ticks = np.arange(len(class_names))\n","plt.xticks(ticks, class_names)\n","plt.yticks(ticks, class_names)\n","sns.heatmap(pd.DataFrame(\n","    metrics.confusion_matrix(y_test, y_pred)),\n","    annot=True)\n","plt.ylabel('Действительные значения')\n","plt.xlabel('Предсказанные значения')"]},{"cell_type":"markdown","metadata":{"id":"V7YOSABMiQ5K"},"source":["Метрика достоверности предсказания:"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":269,"status":"ok","timestamp":1666652724466,"user":{"displayName":"Payrav Kahorov","userId":"15127841572095814136"},"user_tz":-180},"id":"x4XqNgXJiNzY","outputId":"46fe24ae-71b2-4fd9-ffd1-0c9ca5d4fe06"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7792207792207793"]},"metadata":{},"execution_count":19}],"source":["metrics.accuracy_score(y_test, y_pred)"]},{"cell_type":"markdown","metadata":{"id":"_56gtzlCiTs5"},"source":["Метрика точности"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":219,"status":"ok","timestamp":1666652829125,"user":{"displayName":"Payrav Kahorov","userId":"15127841572095814136"},"user_tz":-180},"id":"t-lxk7uEiQWa","outputId":"a4fa0601-53a3-4ccd-c63d-e8bd080e0ffb"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7792207792207793"]},"metadata":{},"execution_count":22}],"source":["metrics.precision_score(y_test, y_pred,average='micro')"]},{"cell_type":"markdown","metadata":{"id":"zZSFpxvuiZt-"},"source":["Метрика полноты"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":249,"status":"ok","timestamp":1666652836923,"user":{"displayName":"Payrav Kahorov","userId":"15127841572095814136"},"user_tz":-180},"id":"zLQcVGJeiZBy","outputId":"33df59e1-3c07-41d4-d680-ccdd28745ae8"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7313131313131314"]},"metadata":{},"execution_count":23}],"source":["metrics.recall_score(y_test, y_pred,average='macro')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"K1DPKO6Yimf-"},"outputs":[],"source":["pima = pima['label'].astype('int32')"]}],"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyM3x3V8wv0tqC4o1ZrXTX4v"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}